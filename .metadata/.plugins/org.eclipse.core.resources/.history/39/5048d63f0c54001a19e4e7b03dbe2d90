package control.expenses.controller;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Optional;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import control.expenses.model.Category;
import control.expenses.model.Expense;
import control.expenses.model.Salary;
import control.expenses.repository.CategoryRepository;
import control.expenses.repository.SalaryRepository;

@RestController
@CrossOrigin
@RequestMapping("/status")
public class CategoryStatus {
	
	@Autowired
	private CategoryRepository categoryRepository;
	
	@Autowired
	private SalaryRepository salaryRepository;
	
	@GetMapping()
	public ResponseEntity<Iterable<Category>> allCategories() {
		
		Iterable<Category> categories = categoryRepository.findAll();
		return ResponseEntity.ok(categories);
		
	}
	
	@GetMapping(value = "/{id}")
	public ResponseEntity<Category> init(@PathVariable(value = "id") Long id) {
		
		Optional<Salary> salary = salaryRepository.findById(2L);
		List<CategoryStatus> allCategoryStatus = new ArrayList<CategoryStatus>();
		float aux = 0;
		
		System.out.println("Expenses do salário " + salary.get().getId());
		
		for(Expense expense : salary.get().getExpenses()) {
			System.out.println(expense.getName());
		}
		
		System.out.println(" = = = = = = = = = = = = = = = = = = = = = = = = = = = = = ");
		
		Set<Category> semRepeticao = new HashSet<Category>();

		
		for(Expense expense : salary.get().getExpenses()) {
			
			System.out.println("Despesa: " + expense.getName());
			System.out.println("Usuário: " + salary.get().getUser().getName());
			System.out.println("Salário: " + salary.get().getValue());
			System.out.println("Categoria: " + expense.getCategory().getName());
			System.out.println("- -");
			
			semRepeticao.add(expense.getCategory());

		}
		
		System.out.println("Categoria sem repetição -------------");
		
		for( Category category : semRepeticao ) {
			
			System.out.println("Categoria: " + category.getName());
			
			for(Expense expense : category.getExpenses()) {
				 
				
				if(expense.getSalary().getId() == salary.get().getId()) {
					
					aux = aux + expense.getValue();
					System.out.println("Valor somando: " + aux);				
				} 
				
			}
			
			
			CategoryStatus categoryStatus = new CategoryStatus();
			categoryStatus.setName(category.getName());
			categoryStatus.setValue(aux);
			
			allCategoryStatus.add(categoryStatus);
			
			aux = 0;

			
		}
		
		for(CategoryStatus categoryStatus : allCategoryStatus) {
			
			System.out.println(categoryStatus.getName());
			System.out.println(categoryStatus.getValue());
			
		}
			
			
		
		return ResponseEntity.ok(category.get());
		
	}
	
}
